<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
<title type="text">Neuron Mint Garden</title>
<generator uri="https://github.com/mojombo/jekyll">Jekyll</generator>
<link rel="self" type="application/atom+xml" href="/feed.xml" />
<link rel="alternate" type="text/html" href="/" />
<updated>2014-08-20T16:10:31+01:00</updated>
<id>/</id>
<author>
  <name>Richard Silverton</name>
  <uri>/</uri>
  <email>silverton.richard@googlemail.com</email>
</author>


<entry>
  <title type="html"><![CDATA[The Biomechanics of Heart-Rate Training, or, "How Do I Run Slowly?"]]></title>
  <link rel="alternate" type="text/html" href="/running/biomechanics-of-heart-rate-training/"/>
  <id>/running/biomechanics-of-heart-rate-training</id>
  <published>2014-08-20T12:52:57+01:00</published>
  <updated>2014-08-20T12:52:57+01:00</updated>
  <author>
    <name>Richard Silverton</name>
    <uri></uri>
    <email>silverton.richard@googlemail.com</email>
  </author>
  
  <content type="html">
    &lt;h2 id=&quot;motivation&quot;&gt;Motivation&lt;/h2&gt;

&lt;p&gt;Having committed to writing a blog about both &lt;a href=&quot;http://meteor.com&quot;&gt;Meteor&lt;/a&gt; &lt;em&gt;and&lt;/em&gt; running (and even chosen the blog title on that basis), I find myself compelled to produce a post about the latter, despite the fact that I’m unable to do very much of it at present. So, to begin, a disclaimer:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;I am currently injured, and as upset about it as any runner tends to be.&lt;/li&gt;
  &lt;li&gt;Apart from being a running enthusiast, there’s no reason at all why I should have any idea what I’m talking about; I’m not a physio, coach, doctor or anybody else with vaguely relevant qualifications.&lt;/li&gt;
  &lt;li&gt;This is hugely self-indulgent, but hopefully carthartic.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That said, my recent experience with heart-rate training, which may or may not have something to do with my current injury, may at least provides some material for discussion.  The question I’m trying to answer is: if a runner is going to commit to a heart rate training regime, do they actually need to &lt;strong&gt;practice running slowly first&lt;/strong&gt;?&lt;/p&gt;

&lt;p&gt;Honestly, it’s not as easy as it sounds.&lt;/p&gt;

&lt;h2 id=&quot;heart-rate-training-the-principle&quot;&gt;Heart Rate Training: the Principle&lt;/h2&gt;

&lt;p&gt;Without dwelling on the scientific and psychological rationale behind training with a heart rate monitor, which is amply discussed elsewhere, suffice to focus on the observation that, left to their own devices, athletes almost uniformly tend to perform easy sessions at too high an intensity and hard sessions at too low an intensity for optimal benefit - i.e. they &lt;a href=&quot;http://www.runnersworld.com/race-training/regression-to-medium-speed&quot;&gt;revert to the mean&lt;/a&gt;.  &lt;strong&gt;Heart rate monitoring&lt;/strong&gt; acts as an effective aid in this respect as it provides immediate feedback on the runner’s failure to remain at the targeted training intensity, often accompanied by an annoying beepy noise, which the runner in question will no doubt be incentivised to silence with their renewed compliance.&lt;/p&gt;

&lt;p&gt;Thanks to regular Thursday sessions being dragged round Parliament Hill track by &lt;a href=&quot;https://twitter.com/thomascraggs&quot;&gt;Tom Craggs&lt;/a&gt; with the rest of the &lt;a href=&quot;https://twitter.com/ChasersLDN&quot;&gt;Mornington Chasers&lt;/a&gt;, the peer pressure required to run harder than I would usually contemplate alone was being applied with sufficient regularity to leave me confident that the hard days were genuinely just that, but I wasn’t sure the same could be said about easy days, which tended to be somewhat laissez-faire. With the Frankfurt marathon coming up in October and consequent necessity to increase weekly mileage, the prospect of applying a scientific approach to the easy runs seemed appealling.  As, frankly, did spending an unnecessary amount of money on a smart new running watch.&lt;/p&gt;

&lt;h2 id=&quot;garmin-forerunner-620&quot;&gt;Garmin Forerunner 620&lt;/h2&gt;

&lt;p&gt;If you’re looking for a good way to spend more than £250 and justify it by pretending that your running performance will be magically transformed, I can offer no better suggestion than the &lt;a href=&quot;https://buy.garmin.com/en-GB/GB/sports/running/forerunner-620/prod122785.html&quot;&gt;Garmin Forerunner 620&lt;/a&gt;.  Of course, it’s the training that makes you faster and the watch doesn’t necessarily have anything to do with it, but for those of us who want something on our wrists that looks smart &lt;em&gt;and&lt;/em&gt; tells us our vertical oscillation, this is the gadget we’ve been waiting for.  Heart Rate, Race time predictor, VO2 Max estimator, Recovery Advisor, Ground Contact Time and Cadence (more of that later) are all provided, along with the usual pace and distance data.&lt;/p&gt;

&lt;h2 id=&quot;running-very-slowly-is-difficult&quot;&gt;Running very slowly is difficult&lt;/h2&gt;

&lt;p&gt;I’ll leave out the details surrounding calibration, and cut to the chase: how does it feel to do as instructed and run in heart rate zone two?  For me, very, very slow, that’s how.  Any slight incline prompts a series of beeps from the watch, as does thirty seconds not spent actively concentrating on running slowly.  There are encouraging aspects to this observation: certainly, cycling at the same heart rate doesn’t feel anything like as comfortable, suggesting my physiology has adapted to running to at least some extent.  But the fact remains: running this slowly is genuinely difficult.&lt;/p&gt;

&lt;h2 id=&quot;my-running-form-part-i&quot;&gt;My Running Form (Part I)&lt;/h2&gt;

&lt;p&gt;Now I am not the world’s greatest runner, or my city’s greatest runner, or my club’s greatest runner.  The number of runners I would need to be among to represent the greatest would be really very small.  However, the gradual assimilation of advice from coaches and reputable running publications, along with quite a lot of practice, has at least left me with a running style which is pretty fluid and efficient, with a fore-foot strike, an upright posture and a relatively fast cadence (thanks, coach Craggs).  It’s not perfect, but it’s pretty solid:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/runningshot.jpg&quot; alt=&quot;Running Screenshot&quot; /&gt;&lt;/p&gt;

&lt;p&gt;My shiny new toy provided some relatively encouraging statistics to back this up: a healthy cadence of around 185spm at tempo pace, ground contact time hovering just above 200ms (which, supposedly, is good) and vertical oscillation generally below 10cm (average, but not terrible).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/runningformgood.png&quot; alt=&quot;Running Form - Good&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Unfortunately, all that was abandoned in spectacular fashion when I started to limit my heart-rate.&lt;/p&gt;

&lt;h2 id=&quot;my-running-form-part-ii&quot;&gt;My Running Form (Part II)&lt;/h2&gt;

&lt;p&gt;How does one reduce effort, and therefore heart rate, without compromising running form? To an extent, the strategy of reducing stride length and maintaining everything else seems logical, until one actually tries to do it.  Fairly quickly you end up replicating the sort of tip-toeing neuro-muscular warm-up exercise that’s ideal before a track session, but feels (and probably looks) ridiculous when you’re trying to run round the park and, crucially, doesn’t actually get your heart-rate into the designated zone.  It’s probably perfectly possible to run 8m30s miles at 180spm, but I don’t seem to be able to do it.&lt;/p&gt;

&lt;p&gt;So, the cadence inevitably drops.  And drops.  And drops.  And I end up loping up and down in a fashion that feels ungainly and has the statistics to back it up: ground contact time way up, cadence way down and, most worryingly, vertical oscillation which the Garmin now classes as bright red (for which you should read “awful”).  Whether the received wisdom on the consequences of such a dramatic change in running form is correct or not, there is &lt;a href=&quot;http://www.runnersworld.com/running-tips/the-pros-and-cons-of-stride-variability&quot;&gt;strong evidence&lt;/a&gt; that it’s not a great idea.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/runningformbad.png&quot; alt=&quot;Running Form - Bad&quot; /&gt;&lt;/p&gt;

&lt;p&gt;During the three weeks over which I persevered with this regime, I grew to understand and appreciate the physiological rationale behind heart rate training: whilst self-assessment is no way to judge a training plan, there’s no doubt that I was consistently fresher and less fatigued than during previous periods of heavy-ish training, despite logging more miles per week (40-50 as opposed to 30-40).  Unfortunately, my lower legs also began to hurt in a way that they hadn’t for several years, with the pain in my left shin getting progressively worse until one long run left me struggling to walk down stairs the following day.  That was three weeks ago.&lt;/p&gt;

&lt;h2 id=&quot;the-big-question&quot;&gt;The Big Question&lt;/h2&gt;

&lt;p&gt;As I suggested earlier, I’m currently injured - awaiting the results of an x-ray but comprehensively condemned to the pool and gym for the forseeable future either way.  It would be absurdly unscientific to link cause with effect on a sample size of one, particularly when it’s my own body,and even if the change in training was responsible, it was my own failure to adapt my running style sufficiently, which I’m sure must be possible, but it’s not clear how.  Nevertheless, it does make me wonder.&lt;/p&gt;

&lt;p&gt;Leaving aside the watch, the statistics and most of the science, &lt;strong&gt;is it advisable, or even possible, to run a lot slower than your natural pace?&lt;/strong&gt;  If the answer is yes, shouldn’t there also be some advice on how?  For cyclists, turning down the intensity is a straightforward matter of gearing, but runnning doesn’t really work like that.&lt;/p&gt;

&lt;p&gt;There are all sorts of articles out there advising us on how to run quicker - is it time we had one teaching us how to run slowly?&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;/running/biomechanics-of-heart-rate-training/&quot;&gt;The Biomechanics of Heart-Rate Training, or, "How Do I Run Slowly?"&lt;/a&gt; was originally published by Richard Silverton at &lt;a href=&quot;&quot;&gt;Neuron Mint Garden&lt;/a&gt; on August 20, 2014.&lt;/p&gt;
  </content>
</entry>


<entry>
  <title type="html"><![CDATA[Understanding Meteor's Low-Level Publications API]]></title>
  <link rel="alternate" type="text/html" href="/meteor/meteor-low-level-publications/"/>
  <id>/meteor/meteor-low-level-publications</id>
  <published>2014-08-01T13:26:57+01:00</published>
  <updated>2014-08-01T13:26:57+01:00</updated>
  <author>
    <name>Richard Silverton</name>
    <uri></uri>
    <email>silverton.richard@googlemail.com</email>
  </author>
  
  <content type="html">
    &lt;h2 id=&quot;motivation&quot;&gt;Motivation&lt;/h2&gt;

&lt;p&gt;As increasing numbers of developers are discovering, &lt;a href=&quot;https://www.meteor.com/&quot;&gt;Meteor&lt;/a&gt; is an incredibly powerful, feature-rich platform with which to create web apps.  By obviating many of the traditional frustrations involved in rolling out a production app, like user authentication or synchronisation of data on client and server, Meteor makes it remarkably easy to progress from idea to prototype to fully-functional product in no time at all.  However, the developer can become dazzled by such power, and there’s the danger that he or she can end up producing complex, multi-page applications without fully understanding one of the most fundamental components of the platform - the Pub/Sub framework.  This is certainly an accurate description of my personal history with Meteor, and a situation I have recently put right, as I describe below.&lt;/p&gt;

&lt;h2 id=&quot;meteorpublish&quot;&gt;Meteor.publish&lt;/h2&gt;

&lt;p&gt;The first remark I should make is that the canonical demonstration of Meteor’s low-level publish API not only exists, but it’s &lt;a href=&quot;http://docs.meteor.com/#meteor_publish&quot;&gt;almost the first thing&lt;/a&gt; to appear in the official documentation.  I can only assume that this is part of the problem - the &lt;code&gt;counts-by-room&lt;/code&gt; example is relatively subtle and benefits from some understanding of &lt;a href=&quot;https://github.com/meteor/meteor/blob/master/packages/livedata/DDP.md&quot;&gt;DDP&lt;/a&gt; (the protocol developed by Meteor specifically for client-server communication) - which will probably leave many readers skipping over it on their first visit in their enthusiasm to get to the shiny stuff below.  Which, it turns out, is a mistake, at least judging by the number of &lt;a href=&quot;http://stackoverflow.com/questions/25033436/is-it-possible-to-publish-subscribe-to-a-remote-api-instead-of-a-collection-in-m&quot;&gt;recent&lt;/a&gt; &lt;a href=&quot;http://stackoverflow.com/questions/25086631/meteor-reactive-publishes-subscribes&quot;&gt;questions&lt;/a&gt; &lt;a href=&quot;http://stackoverflow.com/questions/25079984/meteor-publish-method&quot;&gt;on&lt;/a&gt; &lt;a href=&quot;http://stackoverflow.com/questions/25045783/meteor-ddp-how-to-get-notified-when-a-new-document-is-added-to-a-collection/25069279#25069279&quot;&gt;SO&lt;/a&gt; which can be resolved with a good understanding of this topic.&lt;/p&gt;

&lt;h3 id=&quot;two-publication-patterns-within-a-single-method&quot;&gt;Two Publication Patterns within a single Method&lt;/h3&gt;

&lt;p&gt;Anybody who has some familiarity with Meteor will be aware of the first of the available publication patterns, in which the publish function uses the familiar collection API to return a collection cursor.  Those with knowledge of &lt;a href=&quot;https://github.com/meteor/meteor/blob/master/packages/livedata/DDP.md&quot;&gt;DDP&lt;/a&gt; will also be aware that the cursor object itself cannot actually be communicated via this protocol, so returning a cursor is really a way of describing the documents (current and future) which the app designer wants to make available on the client.  Meteor’s internals then take care of the actual transmission of these objects via &lt;a href=&quot;https://github.com/meteor/meteor/blob/master/packages/livedata/DDP.md&quot;&gt;DDP&lt;/a&gt;, as well as continuing to observe the cursor for changes and sending the &lt;code&gt;ready&lt;/code&gt; message after initial transmission, which is used by the &lt;code&gt;onReady&lt;/code&gt; callback and &lt;code&gt;ready&lt;/code&gt; methods on the client side, and further utilised in iron-router’s &lt;code&gt;wait&lt;/code&gt; method and &lt;code&gt;waitOn&lt;/code&gt; hooks.&lt;/p&gt;

&lt;p&gt;Here’s the basic setup to which I’ll be referring, which involves a test collection being populated with a random integer in the range [0, 1000) every ten seconds.  There’s also an example of the familiar cursor-based pub-sub pattern:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;TestData&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Meteor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Collection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;testdata&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Meteor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isServer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;Meteor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;publish&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;cursorPub&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;TestData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;filter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{});&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;Meteor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;startup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;Meteor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setInterval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;TestData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;insert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;floor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)});&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Meteor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isClient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;Session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;filter&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{});&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;Deps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;autorun&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;mySub&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Meteor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;subscribe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;cursorPub&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;filter&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Note that the subscription on the client side is contained within a &lt;code&gt;Deps.autorun&lt;/code&gt; block and depends on a reactive &lt;code&gt;Session&lt;/code&gt; variable.  This means that we can change the subscription filter simply by changing the value of the session variable, and Meteor is clever enough to manage the resubscription (including doing nothing if the filter hasn’t actually changed).&lt;/p&gt;

&lt;p&gt;We can use the Websockets filter in the Network inspector within Chrome Dev Tools to see exactly how this pub/sub example translates into &lt;a href=&quot;https://github.com/meteor/meteor/blob/master/packages/livedata/DDP.md&quot;&gt;DDP&lt;/a&gt; messages sent and received by the client:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/cursorwebsockets.jpg&quot; alt=&quot;Cursor pattern publication websockets screenshot&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Reading from the bottom up, and ignoring messages relating to the &lt;code&gt;meteor_autoupdate_clientVersions&lt;/code&gt; subscription, which is a meteor internal, we can see the following:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;A &lt;code&gt;connect&lt;/code&gt; message sent by the client to the server.&lt;/li&gt;
  &lt;li&gt;A &lt;code&gt;subscribe&lt;/code&gt; message for the &lt;code&gt;cursorPub&lt;/code&gt; publication, coming from the client, with an attached subscription id.&lt;/li&gt;
  &lt;li&gt;The &lt;code&gt;connected&lt;/code&gt; message returned by the server.&lt;/li&gt;
  &lt;li&gt;Two &lt;code&gt;added&lt;/code&gt; messages returned with a &lt;code&gt;collection&lt;/code&gt; field of &lt;code&gt;testdata&lt;/code&gt; so that the client knows where to store these documents, and the (in this case rather limited) document contents.&lt;/li&gt;
  &lt;li&gt;A &lt;code&gt;ready&lt;/code&gt; message sent by the server indicating that initial data on this subscription has all been sent - note that the &lt;code&gt;subs&lt;/code&gt; field has the same id as the &lt;code&gt;subscribe&lt;/code&gt; message which was sent by the client in step (2).&lt;/li&gt;
  &lt;li&gt;A further &lt;code&gt;added&lt;/code&gt; message as the &lt;code&gt;setInterval&lt;/code&gt; block on the server runs again and adds a new document to the collection.  Meteor is automatically observing the cursor which was returned by the &lt;code&gt;Meteor.publish&lt;/code&gt; block and sending any changes to subscribing clients.  Note that the timestamp on this message is several seconds after the others, confirming that this was a document added after the connection had been made and the initial data synchronised.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;distributed-data-protocol&quot;&gt;Distributed Data Protocol&lt;/h3&gt;

&lt;p&gt;The second way to use the Pub/Sub model is really just an API to exactly this &lt;a href=&quot;https://github.com/meteor/meteor/blob/master/packages/livedata/DDP.md&quot;&gt;DDP&lt;/a&gt; flow from the server side, relating to a specific connection and subscription request.  What this means is that the named publication function will be run once for each incoming subscription on that name, but rather than returning a cursor and leaving it for Meteor to generate the required &lt;a href=&quot;https://github.com/meteor/meteor/blob/master/packages/livedata/DDP.md&quot;&gt;DDP&lt;/a&gt; messages, it allows us to send customised &lt;a href=&quot;https://github.com/meteor/meteor/blob/master/packages/livedata/DDP.md&quot;&gt;DDP&lt;/a&gt; messages to suit the requirements of the application.  Here’s an example which does exactly the same as the one above:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;Meteor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;publish&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;ddpPub&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;self&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;subHandle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;TestData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;filter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;observeChanges&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;added&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fields&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;added&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;testdata&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fields&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;changed&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fields&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;changed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;testdata&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fields&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;removed&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;removed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;testdata&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ready&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onStop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;subHandle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;So what exactly are we doing here?&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Storing a reference to the publish function’s context in &lt;code&gt;self&lt;/code&gt;, as we’ll need to use it inside the functions contained within &lt;code&gt;observeChanges&lt;/code&gt;, where the value of &lt;code&gt;this&lt;/code&gt; will be different.&lt;/li&gt;
  &lt;li&gt;Setting up an observer to monitor the &lt;code&gt;TestData&lt;/code&gt; collection (appropriately filtered).  In this simple example, we are simply passing any changes to the returned document set on the server (i.e. when documents are &lt;code&gt;added&lt;/code&gt;, &lt;code&gt;changed&lt;/code&gt; or &lt;code&gt;removed&lt;/code&gt;) to the subscribing client verbatim, by instructing the publish function to send an appropriate &lt;a href=&quot;https://github.com/meteor/meteor/blob/master/packages/livedata/DDP.md&quot;&gt;DDP&lt;/a&gt; message with exactly the same details down to the client.  This is what the &lt;code&gt;self.added&lt;/code&gt;, &lt;code&gt;self.changed&lt;/code&gt; and &lt;code&gt;self.removed&lt;/code&gt; calls are doing.&lt;/li&gt;
  &lt;li&gt;Note that these functions will run immediately in a synchronous manner for that specific subscriber, so all the existing documents will fire the &lt;code&gt;added&lt;/code&gt; hook before any further processing is done.&lt;/li&gt;
  &lt;li&gt;Thus, by the time we reach &lt;code&gt;self.ready()&lt;/code&gt; we can be confident that all the existing documents have already been sent with &lt;code&gt;self.added&lt;/code&gt; calls, and it’s safe to tell the client that their subscription is ready to use.  It’s very important that we make this call at some stage, otherwise anything that hooks into the subscription’s &lt;code&gt;ready&lt;/code&gt; method will never be fired.&lt;/li&gt;
  &lt;li&gt;Finally, we have to make sure we &lt;code&gt;stop&lt;/code&gt; the observer when the subscription is closed (at which point the &lt;code&gt;onStop&lt;/code&gt; callback is fired).  If we don’t do this then the server will continue to observe the document set until it is restarted, even with no subscriber to send changes to, and server resource utilisation will increase inexorably as clients connect and reconnect.  This would not be a good outcome!&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;When we inspect the result in Chrome Dev Tools, the result is uncannily similar:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/ddpwebsockets.jpg&quot; alt=&quot;DDP pattern publication websockets screenshot&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;something-rather-more-useful&quot;&gt;Something Rather More Useful&lt;/h2&gt;

&lt;p&gt;At this stage, it would be reasonable to ask what the point of all this was, since we’ve just recreated exactly the same series of messages using significantly more code.  But the fact that we now have a way of intermediating the conversation between client and server databases gives us a huge amount of power.  This is utilised very cleverly in the &lt;a href=&quot;http://docs.meteor.com/#meteor_publish&quot;&gt;&lt;code&gt;counts-by-room&lt;/code&gt; example&lt;/a&gt; provided within the Meteor docs, but I’m going to take a slightly different tack.&lt;/p&gt;

&lt;h3 id=&quot;existing-documents-versus-new-additions&quot;&gt;Existing Documents versus New Additions&lt;/h3&gt;

&lt;p&gt;One question which is regularly asked on Stack Overflow and elsewhere relates to how the client can be sure its local collection has been fully synchronised before attempting to work with it.  I would argue that the majority of cases can be resolved with sensible use of the &lt;code&gt;ready()&lt;/code&gt; method, which is reactive and triggered by the DDP &lt;code&gt;ready&lt;/code&gt; message we’ve seen above.  However, whilst I am no expert on websockets and stand to be corrected, I am certain that there are cases in which the order in which messages are sent from the server isn’t necessarily the same as the order in which they’re received by the client, at least if there is a degree of latency involved.  What this means is that the &lt;code&gt;ready&lt;/code&gt; message would arrive before one or more documents.  Perhaps this is no problem, as Meteor’s built-in reactivity will re-render everything as soon as the missing documents arrive and the client will barely even notice.  But what if even that outcome is unacceptable?&lt;/p&gt;

&lt;h4 id=&quot;pattern-1-a-document-counter&quot;&gt;Pattern 1: A Document Counter&lt;/h4&gt;

&lt;p&gt;One way of confirming that the original document set had arrived intact would be to send the number of documents &lt;code&gt;added&lt;/code&gt; before the &lt;code&gt;ready&lt;/code&gt; call as an additional document itself.  This would best be done using another collection to avoid the need to filter it out of the data set that you’re actually interested in communicating.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;CollectionCount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Meteor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Collection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;collectioncount&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// NOTE THAT THIS ONLY NEEDS TO BE DECLARED ON THE CLIENT&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;Meteor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;publish&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;ddpPub&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// WHILST THIS IS OBVIOUSLY ON THE SERVER&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;self&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;ready&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;subHandle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;TestData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;filter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;observeChanges&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;added&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fields&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ready&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;added&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;testdata&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fields&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;changed&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fields&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;changed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;testdata&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fields&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;removed&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;removed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;testdata&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;added&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;collectioncount&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Random&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Collection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;testdata&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Count&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ready&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;ready&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onStop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;subHandle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This publish function will also populate the &lt;code&gt;CollectionCount&lt;/code&gt; collection (which only needs to be constructed on the client) with an object that contains the number of documents in the existing set.  You can then delay mission critical logic on the client until &lt;code&gt;TestData.find().count()&lt;/code&gt; is equal to &lt;code&gt;CollectionCount.findOne({Collection: &quot;testdata&quot;}).Count&lt;/code&gt;.  Note that the actual logic will need to be slightly more involved to account for the period in which &lt;code&gt;CollectionCount.findOne({Collection: &quot;testdata&quot;})&lt;/code&gt; returns nothing as the publish function hasn’t yet sent the corresponding message.&lt;/p&gt;

&lt;h4 id=&quot;pattern-2-an-additional-field&quot;&gt;Pattern 2: An Additional Field&lt;/h4&gt;

&lt;p&gt;A similar scenario is one in which we don’t need to know the exact number of documents in the collection when we subscribe, but we do need to know which they are.  This can be solved as follows:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;Meteor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;publish&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;ddpPub&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;self&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;ready&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;subHandle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;TestData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;filter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;observeChanges&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;added&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fields&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ready&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;fields&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;existing&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;added&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;testdata&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fields&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;changed&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fields&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;changed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;testdata&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fields&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;removed&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;removed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;testdata&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ready&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;ready&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onStop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;subHandle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now if we query the collection on the client immediately after we’ve received the &lt;code&gt;ready&lt;/code&gt; message, we will notice that &lt;code&gt;TestData.find().count&lt;/code&gt; is equal to &lt;code&gt;TestData.find({existing: true}).count()&lt;/code&gt;.  However, once additional documents are added on the client side, this will cease to be the case as these will no longer have the &lt;code&gt;existing&lt;/code&gt; property, allowing us to identify that these are genuinely newly-added documents from a global perspective.&lt;/p&gt;

&lt;p&gt;The two examples above could be combined to solve a problem in which data was being rapidly generated and the client needed to be sure that, not only did it have the right number of documents, but those were exactly the documents in the existing set.  Alternatively, in some use cases, we might not want to send the existing documents over the wire at all, in which case we would simply not execute the &lt;code&gt;self.added&lt;/code&gt; call if &lt;code&gt;!ready&lt;/code&gt; evaluated to true.&lt;/p&gt;

&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;Hopefully, this has shed some light on the power and flexibility of the low-level Publications API, which I believe is frequently ignored by Meteor enthusiasts who may have grown too accustomed to the convenience of the higher-level cursor-based API.  I’m sure there are hundreds of interesting and more elaborate use-cases, involving selective updates, periodic removals, record extension with myriad extra data and so on, and I look forward to seeing them.&lt;/p&gt;

&lt;h2 id=&quot;a-note-on-subscriptions&quot;&gt;A Note on Subscriptions&lt;/h2&gt;

&lt;p&gt;Finally, as I pointed out earlier, I have chosen to put my subscription inside a &lt;code&gt;Deps.autorun&lt;/code&gt; block on the client side, to allow automatic resubscription when the filter is amended.  This provides other benefits from a reactivity perspective:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;If you have a Template helper which has a dependency on the readiness of a subscription, this allows you to resubscribe and maintain reactivity.  What this means is that &lt;code&gt;mySub.ready()&lt;/code&gt; in the example above will always reactively supply the state of the current subscription, even though the actual subscription object has been stopped and replaced by a new one.  This is very convenient!&lt;/li&gt;
  &lt;li&gt;In contrast, if you &lt;em&gt;don’t&lt;/em&gt; put your subscription in a &lt;code&gt;Deps.autorun&lt;/code&gt; block like this, your reactivity can break when you resubscribe.  This means that if you were using &lt;code&gt;mySub.ready()&lt;/code&gt; in a helper function (or another reactive context) and then resubscribe with &lt;code&gt;mySub = Meteor.subscribe('testdata', newFilter);&lt;/code&gt; your helper will not rerun.  For this reason I would always recommend putting your subscriptions in &lt;code&gt;Deps.autorun&lt;/code&gt; blocks and having them update by changing the value of Session variables, or another reactive data source.&lt;/li&gt;
  &lt;li&gt;By default, a subscription that runs within a &lt;code&gt;Deps.autorun&lt;/code&gt; will not actually resubscribe if there is no effective change in the subscription request, even if the &lt;code&gt;autorun&lt;/code&gt; block is rerun.  I can’t imagine a scenario in which this behaviour would be undesirable, but if that’s ever the case you could force a resubscription by just including &lt;code&gt;mySub.stop()&lt;/code&gt; before the &lt;code&gt;Meteor.subscribe&lt;/code&gt; line in the &lt;code&gt;autorun&lt;/code&gt; block.&lt;/li&gt;
&lt;/ul&gt;


    &lt;p&gt;&lt;a href=&quot;/meteor/meteor-low-level-publications/&quot;&gt;Understanding Meteor's Low-Level Publications API&lt;/a&gt; was originally published by Richard Silverton at &lt;a href=&quot;&quot;&gt;Neuron Mint Garden&lt;/a&gt; on August 01, 2014.&lt;/p&gt;
  </content>
</entry>

</feed>
